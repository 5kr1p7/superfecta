<?php
class Number_Guru extends superfecta_base {
	function settings() {

		$source_param['Get_Caller_ID_Name']['desc'] = 'Use NumberGuru for caller id name lookup.';
		$source_param['Get_Caller_ID_Name']['type'] = 'checkbox';
		$source_param['Get_Caller_ID_Name']['default'] = 'on';
		$source_param['Get_SPAM_Score']['desc'] = 'Use NumberGuru for spam scoring.';
		$source_param['Get_SPAM_Score']['type'] = 'checkbox';
		$source_param['Get_SPAM_Score']['default'] = 'on';
		$source_param['Spam_Threshold']['desc'] = 'How sensitive of a spam score to use 0-100';
		$source_param['Spam_Threshold']['type'] = 'number';
		$source_param['Spam_Threshold']['default'] = '60';
		
		$settings['desc'] = "http://www.numberguru.com - 	US free CNAM lookup.<br><br>This data source requires Superfecta Module version 3.0 or higher.";
		
		$settings['param'] = array();
		$settings['source_param'] = $source_param;
		$settings['version_requirement'] = "3.0";

		return($settings);
	}
	
	function get_caller_id($thenumber,$run_param=array()) {
		//This debug variable allows simple copy and past of most sources.
		$debug = $this->debug;
		
		//Paste old source '$usage_mode == 'get caller id' here:
		$caller_id="";
		
		if( (!$this->IsValidNumber('US',$thenumber)) && (!$this->IsValidNumber('CA',$thenumber)) )
		{
			$this->DebugPrint( "Skipping Source - Not a valid US/CAN number: ".$thenumber);
		}
		else
		{
			if(($run_param['Get_SPAM_Score'] == 'on') || ($run_param['Get_Caller_ID_Name'] == 'on'))
			{
				
				$this->DebugPrint( "Searching NumberGuru ... ");

				// Search NumberGuru USA
				$url = "http://www.numberguru.com/s/{$thenumber}";
				$value = $this->get_url_contents($url);
		
				// Check for CNAM lookup
				if(isset($run_param['Get_Caller_ID_Name']) && $run_param['Get_Caller_ID_Name'] == 'on')
				{
					// By default, the found name is empty
					$name = "";
				
					// Grab the first result from NumberGuru that matches our phone number
					$pattern = "/<div class=\"callout_details_left caller_id\">Owner's Name:<\/div>\s*<div class=\"callout_details_right caller_id\">(.*)<\/div>/";
					preg_match($pattern, $value, $match);
					if(isset($match[1]) && strlen($match[1])){
						$name = trim(strip_tags($match[1]));
					}
					
					// If we found a match, return it
					if(strlen($name) > 1 && $name<>"UNAVAILABLE")
					{
						$caller_id = $name;
					}
					else
					{
						$this->DebugPrint( "not found");
					}
				}
				
				// Check for SPAM score
				if(isset($run_param['Get_SPAM_Score']) && $run_param['Get_SPAM_Score'] == 'on')
				{
					$score=0;
					$pattern = "/<div class=\"stat_number\">(.*)%<\/div>\s*<div class=\"stat_title\">Spammer Score<\/div>/";
					
					preg_match($pattern, $value, $match);
					if(isset($match[1]) && strlen($match[1]))
					{
						$score = $match[1];
						if(isset($run_param['Spam_Threshold']) && $score>=$run_param['Spam_Threshold'])
						{
							$this->spam = true;	// Flag as SPAM
							$this->DebugPrint( "SPAM caller" );
						}
					}
				}
			}
		}
		return($caller_id);
	}
	
}